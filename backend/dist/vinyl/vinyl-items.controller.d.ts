import { VinylItemsService, PaginatedVinylItemsResult } from './vinyl-items.service';
import { CreateVinylItemDto, UpdateVinylItemDto, CollectionItemStatusDto } from './dto';
export declare class VinylItemsController {
    private readonly vinylItemsService;
    constructor(vinylItemsService: VinylItemsService);
    create(userId: string, createVinylItemDto: CreateVinylItemDto): Promise<{
        discogs_id: number;
        title: string;
        artist_main: string;
        artists_extra: import("@prisma/client/runtime/library").JsonValue;
        release_title: string;
        year: number;
        formats: import("@prisma/client/runtime/library").JsonValue;
        labels: import("@prisma/client/runtime/library").JsonValue;
        genres: string[];
        styles: string[];
        cover_url_small: string;
        cover_url_large: string;
        notes: string;
        custom_tags: string[];
        status: string;
        id: bigint;
        userId: string;
        added_at: Date;
        updated_at: Date;
    }>;
    findAll(userId: string, page?: number, limit?: number, search?: string, status?: CollectionItemStatusDto, genre?: string, sortBy?: string, sortOrder?: 'asc' | 'desc', tags?: string, folder?: string): Promise<PaginatedVinylItemsResult>;
    findOne(userId: string, id: number): Promise<{
        discogs_id: number;
        title: string;
        artist_main: string;
        artists_extra: import("@prisma/client/runtime/library").JsonValue;
        release_title: string;
        year: number;
        formats: import("@prisma/client/runtime/library").JsonValue;
        labels: import("@prisma/client/runtime/library").JsonValue;
        genres: string[];
        styles: string[];
        cover_url_small: string;
        cover_url_large: string;
        notes: string;
        custom_tags: string[];
        status: string;
        id: bigint;
        userId: string;
        added_at: Date;
        updated_at: Date;
    }>;
    update(userId: string, id: number, updateVinylItemDto: UpdateVinylItemDto): Promise<{
        discogs_id: number;
        title: string;
        artist_main: string;
        artists_extra: import("@prisma/client/runtime/library").JsonValue;
        release_title: string;
        year: number;
        formats: import("@prisma/client/runtime/library").JsonValue;
        labels: import("@prisma/client/runtime/library").JsonValue;
        genres: string[];
        styles: string[];
        cover_url_small: string;
        cover_url_large: string;
        notes: string;
        custom_tags: string[];
        status: string;
        id: bigint;
        userId: string;
        added_at: Date;
        updated_at: Date;
    }>;
    remove(userId: string, id: number): Promise<{
        discogs_id: number;
        title: string;
        artist_main: string;
        artists_extra: import("@prisma/client/runtime/library").JsonValue;
        release_title: string;
        year: number;
        formats: import("@prisma/client/runtime/library").JsonValue;
        labels: import("@prisma/client/runtime/library").JsonValue;
        genres: string[];
        styles: string[];
        cover_url_small: string;
        cover_url_large: string;
        notes: string;
        custom_tags: string[];
        status: string;
        id: bigint;
        userId: string;
        added_at: Date;
        updated_at: Date;
    }>;
}
